name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: |
        docker build .  --tag workshop-container:latest
        docker images

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Download Artifact
      run: |
        wget https://cli.artifactscan.cloudone.trendmicro.com/tmas-cli/latest/tmas-cli_Linux_x86_64.tar.gz
        tar -xzvf tmas-cli_Linux_x86_64.tar.gz

    - name: Image Scanning 
      env:
        TMAS_API_KEY: ${{ secrets.TMAS_API_KEY }}
      run: |
        ./tmas scan docker:workshop-container:latest -VMS --saveSBOM > results.json --override overrides.yml

    - name: Upload Json as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: generated-json
        path: results.json  
        
    - name: Checking Vulnerabilities Scan Results
      run: |
        cat results.json | jq '.vulnerabilities | { totalVulnCount, criticalCount, highCount, mediumCount, lowCount, negligibleCount, unknownCount } | to_entries | .[] | "\(.key): \(.value)"'
        cat results.json | jq '.vulnerabilities.criticalCount < 1 and .vulnerability.highCount < 10 and .vulnerability.mediumCount < 30' | grep -q false && { echo "No se cumple con los criterios de vulnerabilidades. Deteniendo el pipeline."; exit 1; } || echo "Se cumple con los criterios de vulnerabilidades. Continuando con el pipeline."


    - name: Push
      run: |
        docker tag workshop-container:latest alejogaci/workshop-container:latest
        docker push alejogaci/workshop-container:latest
        docker images
